# Welcome to Jekyll!
#
# This config file is meant for settings that affect your whole blog, values
# which you are expected to set up once and rarely edit after that. If you find
# yourself editing this file very often, consider using Jekyll's data files
# feature for the data you need to update frequently.
#
# For technical reasons, this file is *NOT* reloaded automatically when you use
# 'bundle exec jekyll serve'. If you change this file, please restart the server process.

# Site settings
# These are used to personalize your new site. If you look in the HTML files,
# you will see them accessed via {{ site.title }}, {{ site.email }}, and so on.
# You can create any custom variable you would like, and they will be accessible
# in the templates via {{ site.myvariable }}.
title: ugly duckling docs
# email: your-email@example.com
description: >- # this means to ignore newlines until "baseurl:"
  Ugly duckling helps the developers to be focused on the problem
  they are solving. Based on the idea of templating the application logic
  and interface using json files, UD speeds up significantly software 
  design and software implementation.
# baseurl: "" # the subpath of your site, e.g. /blog
url: "https://www.uddocs.com" # the base hostname & protocol for your site, e.g. http://example.com
twitter_username: fabiomattei
github_username:  fabiomattei

collections:
  baseresources:
    output: true
    permalink: /baseresources/:path
  resources:
    output: true
    permalink: /resources/:path
  docs:
    output: true
    permalink: /docs/:path
  tutorials:
    output: true
    permalink: /tutorials/:path
  casestudies:
    output: true
    permalink: /casestudies/:path	

# Build settings
markdown: kramdown
theme: minima
plugins:
  - jekyll-feed

# Exclude from processing.
# The following items will not be processed, by default. Create a custom list
# to override the default setting.
# exclude:
#   - Gemfile
#   - Gemfile.lock
#   - node_modules
#   - vendor/bundle/
#   - vendor/cache/
#   - vendor/gems/
#   - vendor/ruby/
